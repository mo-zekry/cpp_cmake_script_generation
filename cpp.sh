#!/bin/bash

mkdir $1 && cd $1

mkdir include src build .vscode

touch main.cpp CMakeLists.txt

# adding content to the main file

echo "#include <iostream>

int main() {
    std::cout << \"Hello World\" << std::endl;
    return 0;
}" >> main.cpp

# adding content to CMake file

echo "cmake_minimum_required(VERSION 3.22)

project(cpp)

set(SRC
    main.cpp
)

add_executable(out \${SRC})

target_include_directories(out PUBLIC ./include ./src)" >> CMakeLists.txt

# Chooseing the cmake generator
cd build && cmake -G "$2" ..

cd ../.vscode

touch launch.json settings.json tasks.json

echo "{
    \"version\": \"0.2.0\",
    \"configurations\": [
        {
            \"name\": \"(gdb) Launch\",
            \"type\": \"cppdbg\",
            \"request\": \"launch\",
            // Resolved by CMake Tools:
            \"program\": \"\${command:cmake.launchTargetPath}\",
            \"args\": [],
            \"stopAtEntry\": false,
            \"cwd\": \"\${workspaceFolder}\",
            \"environment\": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    \"name\": \"PATH\",
                    \"value\": \"\${env:PATH}:\${command:cmake.getLaunchTargetDirectory}\"
                },
                {
                    \"name\": \"OTHER_VALUE\",
                    \"value\": \"Something something\"
                }
            ],
            // \"externalConsole\": true,
            \"MIMode\": \"gdb\",
            \"setupCommands\": [
                {
                    \"description\": \"Enable pretty-printing for gdb\",
                    \"text\": \"-enable-pretty-printing\",
                    \"ignoreFailures\": true
                }
            ]
        }
    ]
}
" >> launch.json

echo "{
    \"files.associations\": {
        \"iosfwd\": \"cpp\",
        \"iostream\": \"cpp\"
    }
}" >> settings.json

echo "{
    \"tasks\": [
        {
            \"type\": \"cppbuild\",
            \"label\": \"C/C++: g++ build active file\",
            \"command\": \"/usr/bin/g++\",
            \"args\": [
                \"-fdiagnostics-color=always\",
                \"-g\",
                \"\${file}\",
                \"-o\",
                \"\${fileDirname}/\${fileBasenameNoExtension}\"
            ],
            \"options\": {
                \"cwd\": \"\${fileDirname}\"
            },
            \"problemMatcher\": [
                \"\$gcc\"
            ],
            \"group\": {
                \"kind\": \"build\",
                \"isDefault\": true
            },
            \"detail\": \"Task generated by Debugger.\"
        }
    ],
    \"version\": \"2.0.0\"
}" >> tasks.json

cd .. && code .
